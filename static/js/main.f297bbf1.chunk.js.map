{"version":3,"sources":["Context.js","Components/TopGrid/BillionairesImages/JeffBezoslaughing.png","Components/TopGrid/BillionairesImages/markZuckerbergWave.png","Components/TopGrid/BillionairesImages/ElonMuskPic.png","Components/TopGrid/BillionairesImages/bill gates.png","Components/TopGrid/TopGrid.js","Data/marks.js","Components/VerticleSlider/VerticleSlider.js","StatementContext.js","Components/Paragraphs/Paragraphs.js","Components/Statements/Statements.js","Components/MainGrid/MainGrid.js","Components/Table/Table.js","Components/BottomGrid/BottomGrid.js","Components/App/App.js","reportWebVitals.js","index.js"],"names":["appContext","createContext","AppProvider","children","useState","billionaire","setbillionaire","name","setname","remainingWealth","setremainingWealth","tax","setTax","Provider","value","useAppContext","useContext","useStyles","makeStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","color","palette","text","secondary","TopGrid","classes","className","Grid","container","item","xs","src","ElonMuskPic","alt","onClick","billGatesPic","JeffBezospic","markZuckpic","Math","round","marks","label","height","valuetext","VerticalSlider","marksList","setmarksList","useEffect","toLocaleString","Fragment","StylesProvider","injectFirst","Slider","orientation","defaultValue","onChange","event","h","window","innerHeight","y","clientY","scrollBy","onChangeFunction","max","getAriaValueText","aria-labelledby","valueLabelDisplay","valueLabelFormat","id","random","statementContext","StatementProvider","usaSchools","setUsaSchools","solarEnergy","setsolarEnergy","hospitals","sethospitals","cash","setcash","schoolMeals","setschoolMeals","uniScolarship","setUniScolarship","covid","setcovid","clothing","setclothing","homelessNights","sethomelessNights","cancerTreatment","setcancerTreatment","houses","sethouses","libraries","setlibraries","playground","setplayground","mileRoad","setmileRoad","Paragraph","ItemNumber","emoji","Statements","energyhome","setenergyhome","abolish","setabolish","energyhomecalc","parseInt","CenteredGrid","table","backgroundColor","cell","createData","calories","BottomGrid","href","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f297bbf1.chunk.js","sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\n\nconst appContext = createContext(null);\n\nexport function AppProvider({ children }) {\n  const [billionaire, setbillionaire] = useState(186000000000);\n  const [name, setname] = useState('Jeff Bezos');\n  const [remainingWealth, setremainingWealth] = useState(billionaire);\n  const [tax, setTax] = useState(0);\n\n  return (\n    <appContext.Provider\n      value={{\n        billionaire: billionaire,\n        setbillionaire: setbillionaire,\n        name: name,\n        setname: setname,\n        remainingWealth: remainingWealth,\n        setremainingWealth: setremainingWealth,\n        tax: tax,\n        setTax: setTax,\n      }}\n    >\n      {children}\n    </appContext.Provider>\n  );\n}\n\nexport function useAppContext() {\n  return useContext(appContext);\n}\n","export default __webpack_public_path__ + \"static/media/JeffBezoslaughing.a33aefd1.png\";","export default __webpack_public_path__ + \"static/media/markZuckerbergWave.99de0ad1.png\";","export default __webpack_public_path__ + \"static/media/ElonMuskPic.32fda5c1.png\";","export default __webpack_public_path__ + \"static/media/bill gates.d22ab26a.png\";","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useAppContext } from '../../Context';\nimport Grid from '@material-ui/core/Grid';\nimport './TopGrid.css';\nimport JeffBezospic from './BillionairesImages/JeffBezoslaughing.png';\nimport markZuckpic from './BillionairesImages/markZuckerbergWave.png';\nimport ElonMuskPic from './BillionairesImages/ElonMuskPic.png';\nimport billGatesPic from './BillionairesImages/bill gates.png';\n// import JeffBezosOutlined from './BillionairesImages/JeffBezoslaughingOutlined.png';\n// import ElonMuskPicOutlined from './BillionairesImages/ElonMuskPicOutlined.png';\n// import billGatesPicOutlined from './BillionairesImages/bill gatesOutlined.png';\n// import markZuckpicOutlined from './BillionairesImages/markZuckerbergWaveOutlined.png';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n}));\n\nlet usAvgWealth = 65904;\n\nfunction TopGrid() {\n  const {\n    setbillionaire,\n    setname,\n    setremainingWealth,\n    name,\n    billionaire,\n  } = useAppContext();\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <div className='entire'>\n            <div className='headers'>\n              <h1>BILLIONAIRE TAXER</h1>\n              <p className='intro'>\n                Since 2015 the world's top 1% has owned more wealth than the\n                rest of the population combined.\n                <br></br>\n                Use the slider to tax a billionaire's wealth and help fund\n                social change.\n              </p>\n              <p className='picker'>Pick your billionaire</p>\n              <div className='images'>\n                {/* {name !== `Elon Musk's` && ( */}\n                <img\n                  src={ElonMuskPic}\n                  alt='Elon Musk'\n                  className='ElonMusk-img billionaire-img'\n                  onClick={() => {\n                    setbillionaire(209000000000);\n                    setname(`Elon Musk's`);\n                    setremainingWealth(209000000000);\n                  }}\n                />\n                {/* )}\n                {name === `Elon Musk's` && ( */}\n                {/* <img\n                    src={ElonMuskPicOutlined}\n                    alt='Elon Musk'\n                    className='ElonMusk-img billionaire-img'\n                  />\n                )}\n                {name !== 'Bill Gates' && ( */}\n                <img\n                  src={billGatesPic}\n                  alt='Bill Gates'\n                  className='BillGates-img billionaire-img'\n                  onClick={() => {\n                    setbillionaire(134000000000);\n                    setname('Bill Gates');\n                    setremainingWealth(134000000000);\n                  }}\n                />\n                {/* )}\n                {name === 'Bill Gates' && (\n                  <img\n                    src={billGatesPicOutlined}\n                    alt='Bill Gates'\n                    className='BillGates-img billionaire-img'\n                  />\n                )}\n                {name !== 'Jeff Bezos' && ( */}\n                <img\n                  src={JeffBezospic}\n                  alt='Jeff Bezos'\n                  className='JeffBezos-img billionaire-img'\n                  onClick={() => {\n                    setbillionaire(186000000000);\n                    setname('Jeff Bezos');\n                    setremainingWealth(186000000000);\n                  }}\n                />\n                {/* )}\n                {name === 'Jeff Bezos' && (\n                  <img\n                    src={JeffBezosOutlined}\n                    alt='Jeff Bezos'\n                    className='JeffBezos-img billionaire-img'\n                  />\n                )}\n                {name !== `Mark Zuckerberg's` && ( */}\n                <img\n                  src={markZuckpic}\n                  alt='Mark Zuckerberg'\n                  className='MarkZuckerberg-img billionaire-img'\n                  onClick={() => {\n                    setbillionaire(101000000000);\n                    setname(`Mark Zuckerberg's`);\n                    setremainingWealth(101000000000);\n                  }}\n                />\n                {/* )}\n                {name === `Mark Zuckerberg's` && (\n                  <img\n                    src={markZuckpicOutlined}\n                    alt='Mark Zuckerberg'\n                    className='MarkZuckerberg-img billionaire-img'\n                  />\n                )} */}\n              </div>\n            </div>\n            <h2 className='initialStatement'>\n              {name} net worth is{' '}\n              <span className='valuepercent'>\n                {Math.round((billionaire - usAvgWealth) / usAvgWealth) * 100}%\n              </span>{' '}\n              above the US average.\n            </h2>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default TopGrid;\n","const marks = [\n  {\n    value: 65904,\n    label: 'USA median wealth: $65,904',\n  },\n  {\n    value: 1000000000,\n    label: '💵 1 billion US dollars',\n  },\n  {\n    value: 2608000000,\n    label: 'Eritrea GDP: $2,608,000,000',\n  },\n  {\n    value: 20200000000,\n    label: `Iceland GDP: $20,200,000,000`,\n  },\n  {\n    value: 82000000000,\n    label: `Sri Lanka GDP: $82,000,000,000`,\n  },\n  {\n    value: 88000000000,\n    label: `British Royal Families net worth: $88,000,000,000`,\n  },\n  {\n    value: 73500000000,\n    label: `Warren Buffet net worth: $73,500,000,000`,\n  },\n  {\n    value: 115000000000,\n    label: `Ukriane GDP: $115,000,000,000`,\n  },\n];\n\nexport default marks;\n","import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { StylesProvider } from '@material-ui/core/styles';\nimport { useAppContext } from '../../Context';\nimport Slider from '@material-ui/core/Slider';\nimport marks from '../../Data/marks';\nimport './VerticleSlider.css';\n\nconst useStyles = makeStyles({\n  root: {\n    height: 10000,\n  },\n});\n\nfunction valuetext(value) {\n  return `$${value}`;\n}\n\nexport default function VerticalSlider() {\n  const {\n    billionaire,\n    name,\n    setremainingWealth,\n    remainingWealth,\n    tax,\n    setTax,\n  } = useAppContext();\n  const [marksList, setmarksList] = useState(marks);\n\n  const classes = useStyles();\n\n  // window.addEventListener('load', function () {\n  //   setTimeout(function () {\n  //     console.log('RUNNING');\n  //     var scrollPos =\n  //       window.pageYOffset ||\n  //       document.documentElement.scrollTop ||\n  //       document.body.scrollTop;\n  //     if (scrollPos < 1) {\n  //       window.scrollTo(0, 1);\n  //     }\n  //   }, 0);\n  // });\n\n  function onChangeFunction(event, value) {\n    setremainingWealth(value);\n\n    var h = window.innerHeight;\n    var y = event.clientY - h / 2;\n    window.scrollBy(0, y * 0.1);\n  }\n\n  useEffect(() => {\n    setmarksList([\n      ...marksList,\n      {\n        value: billionaire,\n        label: `${name} net worth: $${billionaire.toLocaleString()}`,\n      },\n    ]);\n  }, [billionaire]);\n\n  useEffect(() => {\n    setTax(Math.round(((billionaire - remainingWealth) / billionaire) * 100));\n  });\n\n  return (\n    <React.Fragment>\n      <div className='main'>\n        <StylesProvider injectFirst>\n          <div className={classes.root}>\n            <Slider\n              key={`slider-${billionaire + Math.random}`}\n              className='slider'\n              orientation='vertical'\n              defaultValue={billionaire}\n              onChange={(event, value) => onChangeFunction(event, value)}\n              max={billionaire}\n              getAriaValueText={valuetext}\n              aria-labelledby='vertical-slider'\n              marks={marksList}\n              valueLabelDisplay='on'\n              valueLabelFormat={(value) => (\n                <div id='sliderText'>\n                  {' '}\n                  Tax {name} Wealth {tax}% <br></br> <br></br>\n                  To reduce his net worth to: ${value.toLocaleString()}\n                </div>\n              )}\n            />\n          </div>\n        </StylesProvider>\n      </div>\n    </React.Fragment>\n  );\n}\n","import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { useAppContext } from './Context';\n\nconst statementContext = createContext(null);\n\nexport function StatementProvider({ children }) {\n  const { billionaire, remainingWealth } = useAppContext();\n  const [usaSchools, setUsaSchools] = useState(0);\n  const [solarEnergy, setsolarEnergy] = useState(0);\n  const [hospitals, sethospitals] = useState(0);\n  const [cash, setcash] = useState(0);\n  const [schoolMeals, setschoolMeals] = useState(0);\n  const [uniScolarship, setUniScolarship] = useState(0);\n  const [covid, setcovid] = useState(0);\n  const [clothing, setclothing] = useState(0);\n  const [homelessNights, sethomelessNights] = useState(0);\n  const [cancerTreatment, setcancerTreatment] = useState(0);\n  const [houses, sethouses] = useState(0);\n  const [libraries, setlibraries] = useState(0);\n  const [playground, setplayground] = useState(0);\n  const [mileRoad, setmileRoad] = useState(0);\n\n  //need to add in the missing figures to be zero as at the moment the state is reamining when you move up and down\n  useEffect(() => {\n    if (remainingWealth >= 165000000000) {\n      //first 3\n      sethospitals(\n        Math.round(\n          ((billionaire - remainingWealth) * 0.5) / 112500000\n        ).toLocaleString()\n      );\n      setsolarEnergy(\n        Math.round(\n          ((billionaire - remainingWealth) * 0.25) / 1000\n        ).toLocaleString()\n      );\n      setclothing(\n        Math.round(\n          ((billionaire - remainingWealth) * 0.25) / 59\n        ).toLocaleString()\n      );\n      setUsaSchools(0);\n      setcash(0);\n      setschoolMeals(0);\n      setUniScolarship(0);\n      setlibraries(0);\n      setcovid(0);\n      sethomelessNights(0);\n      setcancerTreatment(0);\n      setmileRoad(0);\n      sethouses(0);\n      setplayground(0);\n    } else if (\n      remainingWealth < 165000000000 &&\n      remainingWealth >= 133000000000\n    ) {\n      //first 6\n      sethospitals(\n        Math.round(\n          ((billionaire - remainingWealth) * 0.3) / 112500000\n        ).toLocaleString()\n      );\n      setsolarEnergy(\n        Math.round(\n          ((billionaire - remainingWealth) * 0.12) / 1000\n        ).toLocaleString()\n      );\n      setclothing(\n        Math.round(\n          ((billionaire - remainingWealth) * 0.12) / 59\n        ).toLocaleString()\n      );\n      setUsaSchools(\n        Math.round(\n          ((billionaire - remainingWealth) * 0.16) / 16269543\n        ).toLocaleString()\n      );\n      setcash(\n        `$${Math.round(\n          ((billionaire - remainingWealth) * 0.2) / 328200000\n        ).toLocaleString()}`\n      );\n      setschoolMeals(\n        Math.round(\n          ((billionaire - remainingWealth) * 0.1) / 2.48\n        ).toLocaleString()\n      );\n      setUniScolarship(0);\n      setlibraries(0);\n      setcovid(0);\n      sethomelessNights(0);\n      setcancerTreatment(0);\n      setmileRoad(0);\n      sethouses(0);\n      setplayground(0);\n    }\n\n    if (remainingWealth < 133000000000 && remainingWealth >= 100000000000) {\n      //first 9\n      sethospitals(\n        Math.round(\n          ((billionaire - remainingWealth) * 0.2) / 112500000\n        ).toLocaleString()\n      );\n      setsolarEnergy(\n        Math.round(\n          ((billionaire - remainingWealth) * 0.09) / 1000\n        ).toLocaleString()\n      );\n      setclothing(\n        Math.round(\n          ((billionaire - remainingWealth) * 0.09) / 59\n        ).toLocaleString()\n      );\n      setUsaSchools(\n        Math.round(\n          ((billionaire - remainingWealth) * 0.09) / 16269543\n        ).toLocaleString()\n      );\n      setcash(\n        `$${Math.round(\n          ((billionaire - remainingWealth) * 0.13) / 328200000\n        ).toLocaleString()}`\n      );\n      setschoolMeals(\n        Math.round(\n          ((billionaire - remainingWealth) * 0.09) / 2.48\n        ).toLocaleString()\n      );\n      setUniScolarship(\n        Math.round(\n          ((billionaire - remainingWealth) * 0.09) / 60000\n        ).toLocaleString()\n      );\n      setlibraries(\n        Math.round(\n          ((billionaire - remainingWealth) * 0.09) / 11000000\n        ).toLocaleString()\n      );\n      setcovid(\n        Math.round(\n          ((billionaire - remainingWealth) * 0.13) / 20\n        ).toLocaleString()\n      );\n      sethomelessNights(0);\n      setcancerTreatment(0);\n      setmileRoad(0);\n      sethouses(0);\n      setplayground(0);\n    }\n\n    if (remainingWealth < 100000000000 && remainingWealth >= 71000000000) {\n      //first 11\n      setsolarEnergy(\n        Math.round(\n          ((billionaire - remainingWealth) * 0.06) / 1000\n        ).toLocaleString()\n      );\n      setUsaSchools(\n        Math.round(\n          ((billionaire - remainingWealth) * 0.1) / 16269543\n        ).toLocaleString()\n      );\n      sethospitals(\n        Math.round(\n          ((billionaire - remainingWealth) * 0.12) / 112500000\n        ).toLocaleString()\n      );\n      setcash(\n        `$${Math.round(\n          ((billionaire - remainingWealth) * 0.12) / 328200000\n        ).toLocaleString()}`\n      );\n      setschoolMeals(\n        Math.round(\n          ((billionaire - remainingWealth) * 0.06) / 2.48\n        ).toLocaleString()\n      );\n      setUniScolarship(\n        Math.round(\n          ((billionaire - remainingWealth) * 0.07) / 60000\n        ).toLocaleString()\n      );\n      setlibraries(\n        Math.round(\n          ((billionaire - remainingWealth) * 0.07) / 11000000\n        ).toLocaleString()\n      );\n      setcovid(\n        Math.round(\n          ((billionaire - remainingWealth) * 0.1) / 20\n        ).toLocaleString()\n      );\n      setclothing(\n        Math.round(\n          ((billionaire - remainingWealth) * 0.06) / 59\n        ).toLocaleString()\n      );\n      sethomelessNights(\n        Math.round(\n          ((billionaire - remainingWealth) * 0.07) / 25\n        ).toLocaleString()\n      );\n      setcancerTreatment(\n        Math.round(\n          ((billionaire - remainingWealth) * 0.1) / 150000\n        ).toLocaleString()\n      );\n      setmileRoad(\n        Math.round(\n          ((billionaire - remainingWealth) * 0.07) / 28020\n        ).toLocaleString()\n      );\n      sethouses(0);\n      setplayground(0);\n    } else if (remainingWealth < 71000000000) {\n      //All options\n      setsolarEnergy(\n        Math.round(\n          ((billionaire - remainingWealth) * 0.06) / 1000\n        ).toLocaleString()\n      );\n      setUsaSchools(\n        Math.round(\n          ((billionaire - remainingWealth) * 0.08) / 16269543\n        ).toLocaleString()\n      );\n      sethospitals(\n        Math.round(\n          ((billionaire - remainingWealth) * 0.1) / 112500000\n        ).toLocaleString()\n      );\n      setcash(\n        `$${Math.round(\n          ((billionaire - remainingWealth) * 0.1) / 328200000\n        ).toLocaleString()}`\n      );\n      setschoolMeals(\n        Math.round(\n          ((billionaire - remainingWealth) * 0.05) / 2.48\n        ).toLocaleString()\n      );\n      setUniScolarship(\n        Math.round(\n          ((billionaire - remainingWealth) * 0.06) / 60000\n        ).toLocaleString()\n      );\n      setlibraries(\n        Math.round(\n          ((billionaire - remainingWealth) * 0.06) / 11000000\n        ).toLocaleString()\n      );\n      setcovid(\n        Math.round(\n          ((billionaire - remainingWealth) * 0.1) / 20\n        ).toLocaleString()\n      );\n      setplayground(\n        Math.round(\n          ((billionaire - remainingWealth) * 0.06) / 29000\n        ).toLocaleString()\n      );\n      setclothing(\n        Math.round(\n          ((billionaire - remainingWealth) * 0.05) / 59\n        ).toLocaleString()\n      );\n      sethomelessNights(\n        Math.round(\n          ((billionaire - remainingWealth) * 0.06) / 25\n        ).toLocaleString()\n      );\n      setcancerTreatment(\n        Math.round(\n          ((billionaire - remainingWealth) * 0.1) / 150000\n        ).toLocaleString()\n      );\n      sethouses(\n        Math.round(\n          ((billionaire - remainingWealth) * 0.06) / 240000\n        ).toLocaleString()\n      );\n      setmileRoad(\n        Math.round(\n          ((billionaire - remainingWealth) * 0.06) / 28020\n        ).toLocaleString()\n      );\n    }\n  }, [remainingWealth]);\n\n  return (\n    <statementContext.Provider\n      value={{\n        usaSchools: usaSchools,\n        solarEnergy: solarEnergy,\n        hospitals: hospitals,\n        cash: cash,\n        schoolMeals: schoolMeals,\n        uniScolarship: uniScolarship,\n        covid: covid,\n        clothing: clothing,\n        homelessNights: homelessNights,\n        cancerTreatment: cancerTreatment,\n        houses: houses,\n        libraries: libraries,\n        playground: playground,\n        mileRoad: mileRoad,\n      }}\n    >\n      {children}\n    </statementContext.Provider>\n  );\n}\n\nexport function useStatementContext() {\n  return useContext(statementContext);\n}\n","import './Paragraphs.css';\n\nfunction Paragraph({ ItemNumber, text, emoji }) {\n  return (\n    <div className='paragraph'>\n      <div className='statements'>\n        <p className='big-number'>{ItemNumber}</p>\n        <p>\n          {text} {emoji}\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default Paragraph;\n","import React, { useState, useEffect } from 'react';\nimport { useAppContext } from '../../Context';\nimport { useStatementContext } from '../../StatementContext';\nimport Paragraph from '../Paragraphs/Paragraphs';\nimport './Statements.css';\n\nfunction Statements() {\n  const { name, tax, remainingWealth } = useAppContext();\n  const {\n    usaSchools,\n    solarEnergy,\n    hospitals,\n    cash,\n    schoolMeals,\n    uniScolarship,\n    covid,\n    clothing,\n    homelessNights,\n    cancerTreatment,\n    houses,\n    libraries,\n    playground,\n    mileRoad,\n  } = useStatementContext();\n  const [energyhome, setenergyhome] = useState(0);\n  const [abolish, setabolish] = useState(false);\n\n  useEffect(() => {\n    let energyhomecalc = parseInt(solarEnergy);\n    setenergyhome(energyhomecalc * 1000 * 200);\n  }, [remainingWealth, solarEnergy]);\n\n  useEffect(() => {\n    if (remainingWealth <= 1000000000) {\n      setabolish(true);\n    }\n  }, [remainingWealth]);\n\n  return (\n    <div className='textBox'>\n      <h2 className='tax'>\n        Taxing {name} wealth by {tax}% could pay for:\n      </h2>\n      <div className='P1'>\n        <Paragraph\n          ItemNumber={hospitals}\n          text={'new hospitals in the US'}\n          emoji='🏥'\n        />\n      </div>\n      <div className='P2'>\n        <Paragraph\n          ItemNumber={solarEnergy}\n          text={`kilowatt's of solar energy to supply ${energyhome} homes`}\n          emoji='🌞'\n        />\n      </div>\n      <div className='P3'>\n        <Paragraph\n          ItemNumber={clothing}\n          text={'winter clothing for a child'}\n          emoji='🧤'\n        />\n      </div>\n      <div className='P4'>\n        <Paragraph\n          ItemNumber={usaSchools}\n          text={'median sized schools in the US'}\n          emoji='📚'\n        />\n      </div>\n      <div className='P5'>\n        <Paragraph\n          ItemNumber={cash}\n          text={'cash per person in the US'}\n          emoji='💸'\n        />\n      </div>\n      <div className='P6'>\n        <Paragraph\n          ItemNumber={schoolMeals}\n          text={'elementary school meals'}\n          emoji='🍛'\n        />\n      </div>\n      <div className='P7'>\n        <Paragraph\n          ItemNumber={uniScolarship}\n          text={'full US university scolarships'}\n          emoji='👩‍🎓'\n        />\n      </div>\n      <div className='P8'>\n        <Paragraph ItemNumber={libraries} text={'US libraries'} emoji='📚' />\n      </div>\n      <div className='P9'>\n        <Paragraph\n          ItemNumber={covid}\n          text={'Pfizer COVID vaccinations'}\n          emoji='💉'\n        />\n      </div>\n      <div className='P10'>\n        <Paragraph\n          ItemNumber={homelessNights}\n          text={'nights in a homeless shelter'}\n          emoji='🛏'\n        />\n      </div>\n      <div className='P11'>\n        <Paragraph\n          ItemNumber={cancerTreatment}\n          text={'patients cancer treatment'}\n          emoji='🚑'\n        />\n        <div className='billionStatement'>\n          {abolish && (\n            <p>\n              A billion dollars is more than any individual needs. <br></br>\n              <br></br>\n              Proposal's to abolishing billionaires would help close the gap\n              between the world's richest and poorest and help create a fairer\n              society.\n            </p>\n          )}\n        </div>\n      </div>\n\n      <div className='P12'>\n        <Paragraph\n          ItemNumber={mileRoad}\n          text={'miles of highway road repaired'}\n          emoji='🚦'\n        />\n      </div>\n      <div className='P13'>\n        <Paragraph\n          ItemNumber={houses}\n          text={'avg. homes in the US'}\n          emoji='🏡'\n        />\n      </div>\n      <div className='P14'>\n        <Paragraph\n          ItemNumber={playground}\n          text={'childrens playgrounds'}\n          emoji='🪁'\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default Statements;\n","import React from 'react';\nimport './MainGrid.css';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport VerticalSlider from '../VerticleSlider/VerticleSlider';\nimport Statements from '../Statements/Statements';\nimport { StatementProvider } from '../../StatementContext';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n}));\n\nfunction CenteredGrid() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={3}>\n        <Grid item xs={4}>\n          <VerticalSlider />\n        </Grid>\n        <StatementProvider>\n          <Grid item xs={8}>\n            <Statements />\n          </Grid>\n        </StatementProvider>\n      </Grid>\n    </div>\n  );\n}\n\nexport default CenteredGrid;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles({\n  table: {\n    padding: 5,\n    backgroundColor: '#282c34;',\n  },\n  cell: {\n    color: 'white',\n    padding: 0.5,\n  },\n});\n\nfunction createData(name, calories) {\n  return { name, calories };\n}\n\nconst rows = [\n  createData(\n    `Children's winter clothing: $59`,\n    `Median sized US school: $16,269,543`\n  ),\n  createData(`Elementary school seal: $2.48`, `University scolarship: $60,000`),\n  createData(`Library: $11,000,000`, `Pfizer COVID vaccination: $20`),\n  createData(\n    `A night in a homeless shelter: $25`,\n    `Cancer treatment: $150,000`\n  ),\n  createData(`1 miles of highway $28,020`, `Avg. homes in the US $240,000`),\n];\n\nexport default function TableData() {\n  const classes = useStyles();\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label='simple table'>\n        <TableHead>\n          <TableRow>\n            <TableCell className='Cell'>Hospital: $112,500,000</TableCell>\n            <TableCell align='right'>Kilowatt of solar energy: $1000</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row) => (\n            <TableRow key={row.name}>\n              <TableCell component='th' scope='row'>\n                {row.name}\n              </TableCell>\n              <TableCell align='right'>{row.calories}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\n//\n// import React from 'react';\n// import PropTypes from 'prop-types';\n// import { makeStyles } from '@material-ui/core/styles';\n// import ListItem from '@material-ui/core/ListItem';\n// import ListItemText from '@material-ui/core/ListItemText';\n// import { FixedSizeList } from 'react-window';\n// import './Table.css';\n\n// const useStyles = makeStyles((theme) => ({\n//   root: {\n//     width: '100%',\n//     height: 150,\n//     maxWidth: 300,\n//     backgroundColor: '#282c34',\n//   },\n// }));\n\n// let text = [\n//   `- Hospital: $112,500,000`,\n//   `- Kilowatt of solar energy: $1000`,\n//   `- Children's winter clothing: $59`,\n//   `- Median sized US school: $16,269,543`,\n//   `- Elementary school seal: $2.48`,\n//   `- University scolarship: $60,000`,\n//   `- Library: $11,000,000`,\n//   `- Pfizer COVID vaccination: $20`,\n//   `- A night in a homeless shelter: $25`,\n//   `- Cancer treatment: $150,000`,\n//   `- 1 miles of highway $28,020`,\n//   `- Avg. homes in the US $240,000`,\n// ];\n\n// function renderRow(props) {\n//   const { index, style } = props;\n\n//   return (\n//     <ListItem button style={style} key={index}>\n//       <ListItemText primary={text[index]} />\n//     </ListItem>\n//   );\n// }\n\n// renderRow.propTypes = {\n//   index: PropTypes.number.isRequired,\n//   style: PropTypes.object.isRequired,\n// };\n\n// function Table() {\n//   const classes = useStyles();\n\n//   return (\n//     <div className={classes.root}>\n//       <div>\n//         <h3>Cost per single value used:</h3>\n//         <FixedSizeList height={150} width={600} itemSize={46} itemCount={12}>\n//           {renderRow}\n//         </FixedSizeList>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default Table;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport TableData from '../Table/Table';\nimport './BottomGrid.css';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n}));\n\nfunction BottomGrid() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <div className='bottomStatement'>\n            Learn more about wealth inequality at:\n            {'  '}\n            <a href='https://inequality.org/facts/wealth-inequality/'>\n              inequality.org/facts/wealth-inequality/\n            </a>\n          </div>\n        </Grid>\n        {/* <Grid item xs={12}>\n          <TableData />\n        </Grid> */}\n      </Grid>\n    </div>\n  );\n}\n\nexport default BottomGrid;\n","import './App.css';\nimport React from 'react';\nimport TopGrid from '../TopGrid/TopGrid';\nimport MainGrid from '../MainGrid/MainGrid';\nimport BottomGrid from '../BottomGrid/BottomGrid';\nimport { AppProvider } from '../../Context';\n\nfunction App() {\n  return (\n    <AppProvider>\n      <div>\n        <TopGrid />\n\n        <MainGrid className='mainGrid' />\n        <BottomGrid />\n      </div>\n    </AppProvider>\n  );\n}\n\nexport default App;\n\n//add onscroll to maingrid to set the slider value https://reactjs.org/docs/events.html#ui-events\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./reset.css\"\nimport \"./index.css\";\nimport App from \"../src/Components/App/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}